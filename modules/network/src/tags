!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BORDER_COLOR	lists.py	/^BORDER_COLOR = color_hex_to_cairo("#aeaeae")$/;"	v
BUTTON_PADDING	container.py	/^BUTTON_PADDING = 5$/;"	v
Button	container.py	/^from dtk.ui.button import Button, ToggleButton$/;"	i
Button	lan_config.py	/^from dtk.ui.button import Button,ToggleButton, RadioButton, CheckButton$/;"	i
CHECK_LEFT_PADDING	lists.py	/^    CHECK_LEFT_PADDING = 10$/;"	v	class:WiredItem
CHECK_LEFT_PADDING	lists.py	/^    CHECK_LEFT_PADDING = 10$/;"	v	class:WirelessItem
CHECK_RIGHT_PADIING	lists.py	/^    CHECK_RIGHT_PADIING = 10$/;"	v	class:WiredItem
CHECK_RIGHT_PADIING	lists.py	/^    CHECK_RIGHT_PADIING = 10$/;"	v	class:WirelessItem
CheckButton	lan_config.py	/^from dtk.ui.button import Button,ToggleButton, RadioButton, CheckButton$/;"	i
CheckButtonM	widgets.py	/^class CheckButtonM(ToggleButton):$/;"	c
ComboBox	lan_config.py	/^from dtk.ui.combo import ComboBox$/;"	i
Contain	container.py	/^class Contain(gtk.Alignment):$/;"	c
Contain	main.py	/^from container import Contain$/;"	i
DEFAULT_FONT_SIZE	container.py	/^from dtk.ui.constant import DEFAULT_FONT_SIZE$/;"	i
DEFAULT_FONT_SIZE	lists.py	/^from dtk.ui.constant import DEFAULT_FONT_SIZE$/;"	i
Entry	container.py	/^from dtk.ui.entry import Entry$/;"	i
Entry	widgets.py	/^from dtk.ui.entry import Entry$/;"	i
EventBox	container.py	/^from dtk.ui.box import EventBox$/;"	i
HORIZONAL_PADDING	widgets.py	/^    HORIZONAL_PADDING = 10$/;"	v	class:Settings
ICON_PADDING	container.py	/^ICON_PADDING = 5$/;"	v
IPV4Conf	lan_config.py	/^class IPV4Conf(gtk.VBox):$/;"	c
IPV6Conf	lan_config.py	/^class IPV6Conf(gtk.VBox):$/;"	c
ImageButton	widgets.py	/^from dtk.ui.button import ImageButton, ToggleButton$/;"	i
InputEntry	lan_config.py	/^from dtk.ui.entry import InputEntry, TextEntry$/;"	i
JUMPTO_RIGHT_PADDING	lists.py	/^    JUMPTO_RIGHT_PADDING = 10$/;"	v	class:WiredItem
JUMPTO_RIGHT_PADDING	lists.py	/^    JUMPTO_RIGHT_PADDING = 10$/;"	v	class:WirelessItem
Label	lan_config.py	/^from dtk.ui.label import Label$/;"	i
Label	main.py	/^from dtk.ui.label import Label$/;"	i
Label	wireless_config.py	/^from dtk.ui.label import Label$/;"	i
NMActiveConnection	wired.py	/^from nmlib.nm_active_connection import NMActiveConnection$/;"	i
NMClient	wired.py	/^from nmlib.nmclient import NMClient, nmclient$/;"	i
NMDevice	wired.py	/^from nmlib.nmdevice import NMDevice$/;"	i
NMDeviceEthernet	wired.py	/^from nmlib.nmdevice_ethernet import NMDeviceEthernet$/;"	i
NMDeviceWifi	wired.py	/^from nmlib.nmdevice_wifi import NMDeviceWifi$/;"	i
NMRemoteConnection	wired.py	/^from nmlib.nm_remote_connection import NMRemoteConnection$/;"	i
NMSetting8021x	lan_config.py	/^from nmutils.nmsetting_802_1x import NMSetting8021x$/;"	i
NoSetting	lan_config.py	/^class NoSetting(gtk.VBox):$/;"	c
PADDING	main.py	/^PADDING = 32$/;"	v
Proxy	main.py	/^class Proxy(gtk.VBox):$/;"	c
RadioButton	lan_config.py	/^from dtk.ui.button import Button,ToggleButton, RadioButton, CheckButton$/;"	i
SIGNAL_LEFT_PADDING	lists.py	/^    SIGNAL_LEFT_PADDING = 0$/;"	v	class:WirelessItem
SIGNAL_RIGHT_PADDING	lists.py	/^    SIGNAL_RIGHT_PADDING = 27$/;"	v	class:WirelessItem
Security	lan_config.py	/^class Security(gtk.VBox):$/;"	c
SettingButton	lan_config.py	/^from widgets import SettingButton$/;"	i
SettingButton	widgets.py	/^class SettingButton(gtk.HBox):$/;"	c
Settings	widgets.py	/^class Settings(gtk.HBox):$/;"	c
Sidebar	lan_config.py	/^class Sidebar(gtk.VBox):$/;"	c
Slider	main.py	/^from dtk.ui.slider import Slider$/;"	i
TEXT_PADDING	container.py	/^TEXT_PADDING = 5$/;"	v
TabBox	lan_config.py	/^from dtk.ui.tab_window import TabBox$/;"	i
TabBox	wireless_config.py	/^from dtk.ui.tab_window import TabBox$/;"	i
Tabs	wireless_config.py	/^class Tabs(gtk.VBox):$/;"	c
TextEntry	lan_config.py	/^from dtk.ui.entry import InputEntry, TextEntry$/;"	i
ThreeG	main.py	/^class ThreeG(gtk.VBox):$/;"	c
ToggleButton	container.py	/^from dtk.ui.button import Button, ToggleButton$/;"	i
ToggleButton	lan_config.py	/^from dtk.ui.button import Button,ToggleButton, RadioButton, CheckButton$/;"	i
ToggleButton	widgets.py	/^from dtk.ui.button import ImageButton, ToggleButton$/;"	i
TreeItem	lists.py	/^from dtk.ui.new_treeview import TreeItem, TreeView$/;"	i
TreeView	lists.py	/^from dtk.ui.new_treeview import TreeItem, TreeView$/;"	i
TreeView	main.py	/^from dtk.ui.new_treeview import TreeView$/;"	i
TypeConvert	wired.py	/^from nmlib.nm_utils import TypeConvert$/;"	i
VERITCAL_PADDING	widgets.py	/^    VERITCAL_PADDING = 5$/;"	v	class:Settings
VERTICAL_PADDING	lists.py	/^    VERTICAL_PADDING = 5$/;"	v	class:WiredItem
VERTICAL_PADDING	lists.py	/^    VERTICAL_PADDING = 5$/;"	v	class:WirelessItem
VpnSection	main.py	/^class VpnSection(gtk.VBox):$/;"	c
WifiSection	main.py	/^class WifiSection(gtk.VBox):$/;"	c
WiredItem	lists.py	/^class WiredItem(TreeItem):$/;"	c
WiredItem	main.py	/^from lists import WiredItem, WirelessItem$/;"	i
WiredSection	main.py	/^class WiredSection(gtk.VBox):$/;"	c
WiredSetting	lan_config.py	/^class WiredSetting(gtk.HBox):$/;"	c
WiredSetting	lists.py	/^from lan_config import WiredSetting$/;"	i
WiredSetting	main.py	/^from lan_config import WiredSetting$/;"	i
Wireless	main.py	/^class Wireless(gtk.VBox):$/;"	c
WirelessConf	wireless_config.py	/^class WirelessConf(gtk.Table):$/;"	c
WirelessItem	lists.py	/^class WirelessItem(TreeItem):$/;"	c
WirelessItem	main.py	/^from lists import WiredItem, WirelessItem$/;"	i
__init__	container.py	/^    def __init__(self, icon, text, switch_callback= None):$/;"	m	class:Contain
__init__	lan_config.py	/^    def __init__(self):$/;"	m	class:NoSetting
__init__	lan_config.py	/^    def __init__(self, connection = None):$/;"	m	class:IPV4Conf
__init__	lan_config.py	/^    def __init__(self, connection = None):$/;"	m	class:IPV6Conf
__init__	lan_config.py	/^    def __init__(self, connection):$/;"	m	class:Security
__init__	lan_config.py	/^    def __init__(self, sidebar_callback):$/;"	m	class:Sidebar
__init__	lan_config.py	/^    def __init__(self, slider):$/;"	m	class:WiredSetting
__init__	lists.py	/^    def __init__(self, essid, slider = None,active= False, font_size = DEFAULT_FONT_SIZE):$/;"	m	class:WiredItem
__init__	lists.py	/^    def __init__(self, essid,strength = 50, active= False, font_size = DEFAULT_FONT_SIZE):$/;"	m	class:WirelessItem
__init__	main.py	/^    def __init__(self):$/;"	m	class:Proxy
__init__	main.py	/^    def __init__(self):$/;"	m	class:ThreeG
__init__	main.py	/^    def __init__(self):$/;"	m	class:VpnSection
__init__	main.py	/^    def __init__(self):$/;"	m	class:WifiSection
__init__	main.py	/^    def __init__(self):$/;"	m	class:WiredSection
__init__	main.py	/^    def __init__(self):$/;"	m	class:Wireless
__init__	widgets.py	/^    def __init__(self, group, connection,setting, callback):$/;"	m	class:SettingButton
__init__	widgets.py	/^    def __init__(self, group,connection ,callback,padding_x = 8):$/;"	m	class:CheckButtonM
__init__	widgets.py	/^    def __init__(self, label):$/;"	m	class:Settings
__init__	wireless_config.py	/^    def __init__(self):$/;"	m	class:Tabs
__init__	wireless_config.py	/^    def __init__(self):$/;"	m	class:WirelessConf
active	lan_config.py	/^    active = NMRemoteConnection(active_connection.get_connection())$/;"	v
active	lan_config.py	/^    active =None$/;"	v
active_connection	lan_config.py	/^    active_connection = NMActiveConnection(active_path)$/;"	v
active_path	lan_config.py	/^active_path = wired_device.get_active_connection()$/;"	v
add_new_setting	lan_config.py	/^    def add_new_setting(self, widget):$/;"	m	class:Sidebar
align	widgets.py	/^    align = gtk.Alignment(1 , 1, 0,0)$/;"	v	class:Settings
alpha_color_hex_to_cairo	widgets.py	/^from dtk.ui.utils import color_hex_to_cairo, alpha_color_hex_to_cairo, cairo_disable_antialias, container_remove_all$/;"	i
app_theme	container.py	/^from theme import app_theme$/;"	i
app_theme	lan_config.py	/^from theme import app_theme$/;"	i
app_theme	lists.py	/^from theme import app_theme$/;"	i
app_theme	main.py	/^from theme import app_theme$/;"	i
app_theme	theme.py	/^app_theme = init_skin($/;"	v
app_theme	widgets.py	/^from theme import app_theme$/;"	i
app_theme	wireless_config.py	/^from theme import app_theme$/;"	i
auto_dns_set	lan_config.py	/^    def auto_dns_set(self, widget, connection):$/;"	m	class:IPV4Conf
auto_dns_set	lan_config.py	/^    def auto_dns_set(self, widget, connection):$/;"	m	class:IPV6Conf
auto_get_ip_addr	lan_config.py	/^    def auto_get_ip_addr(self, widget, connection):$/;"	m	class:IPV4Conf
auto_get_ip_addr	lan_config.py	/^    def auto_get_ip_addr(self, widget, connection):$/;"	m	class:IPV6Conf
cairo_disable_antialias	lists.py	/^from dtk.ui.utils import get_content_size, cairo_disable_antialias, color_hex_to_cairo$/;"	i
cairo_disable_antialias	widgets.py	/^from dtk.ui.utils import color_hex_to_cairo, alpha_color_hex_to_cairo, cairo_disable_antialias, container_remove_all$/;"	i
cancel_changes	lan_config.py	/^    def cancel_changes(self, widget):$/;"	m	class:IPV4Conf
cancel_changes	lan_config.py	/^    def cancel_changes(self, widget):$/;"	m	class:IPV6Conf
check_dns_valid	lan_config.py	/^    def check_dns_valid(self, widget):$/;"	m	class:IPV4Conf
check_dns_valid	lan_config.py	/^    def check_dns_valid(self, widget):$/;"	m	class:IPV6Conf
check_gate_valid	lan_config.py	/^    def check_gate_valid(self, widget):$/;"	m	class:IPV4Conf
check_gate_valid	lan_config.py	/^    def check_gate_valid(self, widget):$/;"	m	class:IPV6Conf
check_ip_valid	lan_config.py	/^    def check_ip_valid(self, widget ):$/;"	m	class:IPV4Conf
check_ip_valid	lan_config.py	/^    def check_ip_valid(self, widget):$/;"	m	class:IPV6Conf
check_mask_valid	lan_config.py	/^    def check_mask_valid(self, widget):$/;"	m	class:IPV4Conf
check_mask_valid	lan_config.py	/^    def check_mask_valid(self, widget):$/;"	m	class:IPV6Conf
clear_entry	lan_config.py	/^    def clear_entry(self):$/;"	m	class:IPV4Conf
clear_entry	lan_config.py	/^    def clear_entry(self):$/;"	m	class:IPV6Conf
clicked_event	widgets.py	/^    def clicked_event(self, widget):$/;"	m	class:Settings
color_hex_to_cairo	lists.py	/^from dtk.ui.utils import get_content_size, cairo_disable_antialias, color_hex_to_cairo$/;"	i
color_hex_to_cairo	main.py	/^from dtk.ui.utils import color_hex_to_cairo$/;"	i
color_hex_to_cairo	widgets.py	/^from dtk.ui.utils import color_hex_to_cairo, alpha_color_hex_to_cairo, cairo_disable_antialias, container_remove_all$/;"	i
con	container.py	/^    con = Contain(app_theme.get_pixbuf("\/Network\/wired.png"), "有线网络", lambda w : "sfdsf")$/;"	v
container_remove_all	widgets.py	/^from dtk.ui.utils import color_hex_to_cairo, alpha_color_hex_to_cairo, cairo_disable_antialias, container_remove_all$/;"	i
dbus_loop	main.py	/^from nmlib.nmobject import dbus_loop$/;"	i
delete_setting	widgets.py	/^    def delete_setting(self, widget, event, connection):$/;"	m	class:SettingButton
draw_line	lists.py	/^from dtk.ui.draw import draw_vlinear, draw_pixbuf, draw_text, draw_line$/;"	i
draw_line	main.py	/^from dtk.ui.draw import draw_pixbuf, draw_line$/;"	i
draw_pixbuf	container.py	/^from dtk.ui.draw import draw_pixbuf, draw_text$/;"	i
draw_pixbuf	lists.py	/^from dtk.ui.draw import draw_vlinear, draw_pixbuf, draw_text, draw_line$/;"	i
draw_pixbuf	main.py	/^from dtk.ui.draw import draw_pixbuf, draw_line$/;"	i
draw_text	container.py	/^from dtk.ui.draw import draw_pixbuf, draw_text$/;"	i
draw_text	lists.py	/^from dtk.ui.draw import draw_vlinear, draw_pixbuf, draw_text, draw_line$/;"	i
draw_vlinear	lists.py	/^from dtk.ui.draw import draw_vlinear, draw_pixbuf, draw_text, draw_line$/;"	i
enter_notify	widgets.py	/^    def enter_notify(self, widget, event):$/;"	m	class:SettingButton
enter_notify	widgets.py	/^    def enter_notify(self, widget, event):$/;"	m	class:Settings
expose_event	main.py	/^    def expose_event(self, widget, event):$/;"	m	class:Proxy
expose_event	main.py	/^    def expose_event(self, widget, event):$/;"	m	class:ThreeG
expose_event	main.py	/^    def expose_event(self, widget, event):$/;"	m	class:VpnSection
expose_event	widgets.py	/^    def expose_event(self, widget, event):$/;"	m	class:Settings
get_check_width	lists.py	/^    def get_check_width(self):$/;"	m	class:WiredItem
get_check_width	lists.py	/^    def get_check_width(self):$/;"	m	class:WirelessItem
get_column_renders	lists.py	/^    def get_column_renders(self):$/;"	m	class:WiredItem
get_column_renders	lists.py	/^    def get_column_renders(self):$/;"	m	class:WirelessItem
get_column_widths	lists.py	/^    def get_column_widths(self):$/;"	m	class:WiredItem
get_column_widths	lists.py	/^    def get_column_widths(self):$/;"	m	class:WirelessItem
get_content_size	container.py	/^from dtk.ui.utils import get_content_size$/;"	i
get_content_size	lists.py	/^from dtk.ui.utils import get_content_size, cairo_disable_antialias, color_hex_to_cairo$/;"	i
get_essid_width	lists.py	/^    def get_essid_width(self, essid):$/;"	m	class:WiredItem
get_essid_width	lists.py	/^    def get_essid_width(self, essid):$/;"	m	class:WirelessItem
get_height	lists.py	/^    def get_height(self):$/;"	m	class:WiredItem
get_height	lists.py	/^    def get_height(self):$/;"	m	class:WirelessItem
get_jumpto_width	lists.py	/^    def get_jumpto_width(self):$/;"	m	class:WiredItem
get_jumpto_width	lists.py	/^    def get_jumpto_width(self):$/;"	m	class:WirelessItem
get_parent_dir	theme.py	/^from dtk.ui.utils import get_parent_dir$/;"	i
get_signal_width	lists.py	/^    def get_signal_width(self):$/;"	m	class:WirelessItem
gtk	container.py	/^import gtk$/;"	i
gtk	lan_config.py	/^import gtk$/;"	i
gtk	lists.py	/^import gtk$/;"	i
gtk	main.py	/^import gtk$/;"	i
gtk	widgets.py	/^import gtk$/;"	i
gtk	wireless_config.py	/^import gtk$/;"	i
hover	lists.py	/^    def hover(self, column, offset_x, offset_y):$/;"	m	class:WiredItem
hover	lists.py	/^    def hover(self, column, offset_x, offset_y):$/;"	m	class:WirelessItem
init_skin	theme.py	/^from dtk.ui.init_skin import init_skin$/;"	i
leave_notify	widgets.py	/^    def leave_notify(self, widget, event):$/;"	m	class:SettingButton
manual_dns_set	lan_config.py	/^    def manual_dns_set(self, widget, connection):$/;"	m	class:IPV4Conf
manual_dns_set	lan_config.py	/^    def manual_dns_set(self, widget, connection):$/;"	m	class:IPV6Conf
manual_ip_entry	lan_config.py	/^    def manual_ip_entry(self,widget, connection):$/;"	m	class:IPV4Conf
manual_ip_entry	lan_config.py	/^    def manual_ip_entry(self,widget, connection):$/;"	m	class:IPV6Conf
mobile	main.py	/^    mobile = ThreeG()$/;"	v	class:Proxy
my_button	widgets.py	/^    my_button = Settings("another setting")$/;"	v	class:Settings
nm_remote_settings	wired.py	/^from nmlib.nm_remote_settings import nm_remote_settings$/;"	i
nmclient	wired.py	/^from nmlib.nmclient import NMClient, nmclient$/;"	i
os	theme.py	/^import os$/;"	i
pango	container.py	/^import pango$/;"	i
pango	lists.py	/^import pango$/;"	i
proxy	main.py	/^    proxy = Proxy()$/;"	v	class:Proxy
render_background	lists.py	/^def render_background( cr, rect):$/;"	f
render_check	lists.py	/^    def render_check(self, cr, rect):$/;"	m	class:WiredItem
render_check	lists.py	/^    def render_check(self, cr, rect):$/;"	m	class:WirelessItem
render_essid	lists.py	/^    def render_essid(self, cr, rect):$/;"	m	class:WiredItem
render_essid	lists.py	/^    def render_essid(self, cr, rect):$/;"	m	class:WirelessItem
render_jumpto	lists.py	/^    def render_jumpto(self, cr, rect):$/;"	m	class:WiredItem
render_jumpto	lists.py	/^    def render_jumpto(self, cr, rect):$/;"	m	class:WirelessItem
render_signal	lists.py	/^    def render_signal(self, cr, rect):$/;"	m	class:WirelessItem
reset	lan_config.py	/^    def reset(self, connection):$/;"	m	class:IPV4Conf
reset	lan_config.py	/^    def reset(self, connection):$/;"	m	class:IPV6Conf
retrieve_list	main.py	/^    def retrieve_list(self):$/;"	m	class:WiredSection
retrieve_list	main.py	/^    def retrieve_list(self):$/;"	m	class:Wireless
save_changes	lan_config.py	/^    def save_changes(self, widget, connection):$/;"	m	class:IPV4Conf
save_changes	lan_config.py	/^    def save_changes(self, widget, connection):$/;"	m	class:IPV6Conf
set_size	widgets.py	/^    def set_size(self, width):$/;"	m	class:Settings
single_click	lists.py	/^    def single_click(self, column, x, y):$/;"	m	class:WiredItem
single_click	lists.py	/^    def single_click(self, column, x, y):$/;"	m	class:WirelessItem
slide_to_event	main.py	/^    def slide_to_event(self, widget, event):$/;"	m	class:Proxy
slide_to_event	main.py	/^    def slide_to_event(self, widget, event):$/;"	m	class:ThreeG
slide_to_event	main.py	/^    def slide_to_event(self, widget, event):$/;"	m	class:VpnSection
slider	main.py	/^slider = Slider()$/;"	v
sys	main.py	/^import sys$/;"	i
sys	wired.py	/^import sys$/;"	i
tab	wireless_config.py	/^    tab = Tabs() $/;"	v	class:WirelessConf
this_is_a_callback	lan_config.py	/^    def this_is_a_callback(self, connection):$/;"	m	class:WiredSetting
toggle_cb	main.py	/^    def toggle_cb(self, widget):$/;"	m	class:Proxy
toggle_cb	main.py	/^    def toggle_cb(self, widget):$/;"	m	class:ThreeG
toggle_cb	main.py	/^    def toggle_cb(self, widget):$/;"	m	class:VpnSection
toggle_cb	main.py	/^    def toggle_cb(self, widget):$/;"	m	class:WifiSection
toggle_cb	main.py	/^    def toggle_cb(self, widget):$/;"	m	class:WiredSection
toggle_cb	main.py	/^    def toggle_cb(self, widget):$/;"	m	class:Wireless
toggled_button	widgets.py	/^    def toggled_button(self, widget):$/;"	m	class:CheckButtonM
tree	lists.py	/^    tree = [WirelessItem("deepinwork"), WirelessItem("myhost")]$/;"	v
tv	lists.py	/^    tv = TreeView(tree)$/;"	v
ui_theme	container.py	/^from dtk.ui.theme import ui_theme$/;"	i
ui_theme	lists.py	/^from dtk.ui.theme import ui_theme$/;"	i
ui_theme	main.py	/^from dtk.ui.theme import ui_theme$/;"	i
ui_theme	widgets.py	/^from dtk.ui.theme import ui_theme$/;"	i
unhover	lists.py	/^    def unhover(self, column, offset_x, offset_y):$/;"	m	class:WiredItem
unhover	lists.py	/^    def unhover(self, column, offset_x, offset_y):$/;"	m	class:WirelessItem
unselect	lists.py	/^    def unselect(self):$/;"	m	class:WiredItem
unselect	lists.py	/^    def unselect(self):$/;"	m	class:WirelessItem
vbox	container.py	/^    vbox = gtk.VBox(False)$/;"	v
vbox	lists.py	/^    vbox = gtk.VBox(False)$/;"	v
vbox	main.py	/^    vbox = gtk.VBox(False, 17)$/;"	v	class:Proxy
vbox	widgets.py	/^    vbox = gtk.VBox()$/;"	v	class:Settings
vpn	main.py	/^    vpn = VpnSection()$/;"	v	class:Proxy
wifi	main.py	/^    wifi = WifiSection()$/;"	v	class:Proxy
win	container.py	/^    win = gtk.Window(gtk.WINDOW_TOPLEVEL)$/;"	v
win	lists.py	/^    win = gtk.Window(gtk.WINDOW_TOPLEVEL)$/;"	v
win	main.py	/^    win = gtk.Window(gtk.WINDOW_TOPLEVEL)$/;"	v	class:Proxy
win	widgets.py	/^    win = gtk.Window(gtk.WINDOW_TOPLEVEL)$/;"	v	class:Settings
win	wireless_config.py	/^    win = gtk.Window(gtk.WINDOW_TOPLEVEL)$/;"	v	class:WirelessConf
wire_conf	main.py	/^    wire_conf = WiredSetting(slider)$/;"	v	class:Proxy
wired	main.py	/^    wired = WiredSection()$/;"	v	class:Proxy
wired_device	wired.py	/^wired_device = NMDevice(nmclient.get_wired_devices()[0])$/;"	v
wireless	main.py	/^    wireless = Wireless()$/;"	v	class:Proxy
